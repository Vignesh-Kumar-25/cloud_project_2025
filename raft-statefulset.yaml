apiVersion: v1
kind: PersistentVolume
metadata:
  name: votes-pv  # ✅ Shared Persistent Volume (PV) for all pods
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany  # ✅ Allows all pods to read and write
  persistentVolumeReclaimPolicy: Retain
  storageClassName: standard
  hostPath:
    path: "/mnt/data"  # ✅ Adjust this based on your Kubernetes host setup

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: votes-pvc  # ✅ Shared PVC for all pods
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard  # ✅ Matches the PV above

---
apiVersion: v1
kind: Service
metadata:
  name: raft
  labels:
    app: raft
spec:
  clusterIP: None  # ✅ Headless service for stable DNS resolution
  selector:
    app: raft
  ports:
    - name: raft
      port: 7010
    - name: raft-internal
      port: 7011
    - name: fastapi
      port: 8000  # ✅ Added FastAPI service to allow external API calls

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: raft
spec:
  serviceName: "raft"
  replicas: 6  # ✅ Ensures we deploy 6 Raft nodes
  selector:
    matchLabels:
      app: raft
  template:
    metadata:
      labels:
        app: raft
    spec:
      containers:
        - name: raft-node
          image: my-raft-app:latest  # ✅ Keeps your existing image
          imagePullPolicy: Never
          ports:
            - containerPort: 7010
            - containerPort: 7011
            - containerPort: 8000
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ADDR
              value: "$(NODE_ID).raft.default.svc.cluster.local:7010"
            - name: ENSEMBLE
              value: "raft-0.raft.default.svc.cluster.local:7010,raft-1.raft.default.svc.cluster.local:7010,raft-2.raft.default.svc.cluster.local:7010,raft-3.raft.default.svc.cluster.local:7010,raft-4.raft.default.svc.cluster.local:7010,raft-5.raft.default.svc.cluster.local:7010"
          volumeMounts:
            - name: votes-storage
              mountPath: /app/data  # ✅ Ensures all pods share the same vote data

      volumes:
        - name: votes-storage
          persistentVolumeClaim:
            claimName: votes-pvc  # ✅ Uses the shared Persistent Volume Claim (PVC)
